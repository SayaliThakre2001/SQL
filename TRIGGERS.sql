-- ------------------------------------- 9/1/25 -----------------------------------

-- create table exc_emp to save details of employees of excelr
CREATE TABLE EXC_EMP
(EID INT,
ENAME VARCHAR(10),
JOB VARCHAR(10),
SAL INT,
DEPTNO INT);

INSERT INTO EXC_EMP VALUES
(1,'ANITA','ANALYST',2000,30),
(2,"SUMIT",'CLERK',3000,10),
(3,'RICHA',"CLERK",2000,20);

select * from exc_emp;
-- before insert trigger
-- if we enter any clerk it should change to analyst

DELIMITER //
CREATE TRIGGER BEFORE_INSERT_JOB
 BEFORE INSERT ON EXC_EMP FOR EACH ROW
 BEGIN
 IF NEW.JOB="CLERK" THEN SET NEW.JOB="ANALYST";
 END IF;
 END //
 DELIMITER ;
 
 SHOW TRIGGERS;
 
 INSERT INTO EXC_EMP VALUES(4,'PREET','CLERK',3000,10);
 SELECT * FROM EXC_EMP;
 
 
 CREATE TABLE EMP_LOG
 (EMID INT,
 ENAME VARCHAR(10),
 LAST_INSERTED datetime);
 
 -- after insert trigger
 -- eid ,name and time of insertion should reflect in emp_log lable
 
 DELIMITER //
 CREATE TRIGGER AFTER_INSERT
 AFTER INSERT ON EXC_EMP FOR EACH ROW
 BEGIN
 INSERT INTO EMP_LOG VALUES(NEW.EID,NEW.ENAME,curdate());
 END //
 DELIMITER ;
 
 
 SET SQL_SAFE_UPDATES=0;
 DELETE FROM EXC_EMP WHERE EID=4;
 
 select * from exc_emp;
 
 INSERT INTO EXC_EMP VALUES(4,'PREET','CLERK',3000,10);
 SELECT * FROM EXC_EMP;
 SELECT * FROM EMP_LOG;
 
 -- before update trigger
 

 DELIMITER //
 CREATE TRIGGER BEFORE_UPDATE
BEFORE UPDATE ON EXC_EMP FOR EACH ROW
 BEGIN
 IF NEW.SAL<1000
 THEN SIGNAL SQLSTATE'45000'
 SET message_text='SALARY CANNOT BE BELOW 1000';
 END IF;
 END //
 DELIMITER ;
 
 SET SQL_SAFE_UPDATES=0;
 UPDATE EXC_EMP SET SAL=900;
 
 
 -- after update trigger
 -- once updation is done it should also
 -- reflect time and message in ex_emp_action table
 
 CREATE TABLE EX_EMP_ACTION
 (TIME_OF_ACTION datetime,
 MESSAGE VARCHAR(50));
 
 DELIMITER //
 CREATE TRIGGER AFTER_UPDATE
AFTER UPDATE ON EXC_EMP FOR EACH ROW
 BEGIN
 INSERT INTO EX_EMP_ACTION VALUES (curdate(),CONCAT_WS(' ','EMPNO:',OLD.EID,'RECORD HAS BEEN UPDATED'));
 END //
 DELIMITER ;
 
 
 UPDATE EXC_EMP SET SAL=2100 WHERE EID=1;
 SELECT * FROM EX_EMP_ACTION;
 
 -- before delete trigger
 
 CREATE TABLE EXC_OLD
 (EID INT,
ENAME VARCHAR(10),
JOB VARCHAR(10),
SAL INT,
DEPTNO INT,
ACTION_TIME datetime);

 DELIMITER //
 CREATE TRIGGER BEFORE_DELETE
BEFORE DELETE ON EXC_EMP FOR EACH ROW
 BEGIN
 INSERT INTO EXC_OLD VALUES (OLD.EID,OLD.ENAME,OLD.JOB,OLD.SAL,OLD.DEPTNO,curdate());
 END //
 DELIMITER ;
 
SET SQL_SAFE_UPDATES=0;
DELETE FROM EXC_EMP WHERE EID=4;
select * from exc_emp;
SELECT * FROM EXC_OLD;

-- after delete trigger



DELIMITER //
 CREATE TRIGGER AFTER_DELETE
AFTER DELETE ON EXC_EMP FOR EACH ROW
 BEGIN
 INSERT INTO EX_EMP_ACTION VALUES (curdate(),CONCAT_WS(' ','EID:',OLD.EID,'RECORD IS DELETED'));
 END //
 DELIMITER ;
 
 DELETE FROM EXC_EMP WHERE EID=3;
 
SELECT * FROM EX_EMP_ACTION;
 